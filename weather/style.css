*,
*::before,
*::after {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'Merriweather Sans', sans-serif;
}

:root {
    --colorDark1: #112d4e;
    --colorDark2: #3f72af;
    --colorLight1: #dbe2ef;
    --colorLight2: #f9f7f7;
}

.wrapper {
    height: 100vh;
    width: 100vw;
    overflow-x: hidden;
    color: var(--colorLight2);
    background-color: #112d4e;
    background-image: linear-gradient(160deg, #112d4e 0%, #3f72af 100%);
}

h1 {
    text-align: center;
    text-transform: uppercase;
    word-spacing: 2px;
    letter-spacing: 1.75px;
    margin-block: 2rem;
}

.tab-container {
    width: 90%;
    max-width: 550px;
    display: flex;
    justify-content: space-between;
    margin: 0 auto;
    margin-top: 4rem;
}

.tab {
    cursor: pointer;
    font-size: 0.875rem;
    letter-spacing: 1.75px;
    padding: 5px 8px;
    text-transform: capitalize;
    /* font-weight: 600; */
}

.tab.current-tab {
    background-color: rgba(219, 226, 239, 0.5);
    border-radius: 4px;
}

/* Tab Container Ends */

/* Main Container */
.weather-container {
    margin-block: 4rem;  /* to set top and bottom margin */
}

.btn {
    all: unset;  /* to remove default properties .The all property resets all properties, apart from unicode-bidi and direction,
     to their initial or inherited value. */
    font-size: 0.85rem;
    text-transform: uppercase;
    padding: 10px 30px;
    border-radius: 5px;
    cursor: pointer;
    background-color: var(--colorDark2);
}

.sub-container {
    width: 90%;
    max-width: 1000px;
    margin: 0 auto;
    display: flex;
    flex-direction: column;
    align-items: center;
}

.grant-location-container {
    display: none;
    /* The display property is used to specify how an element is shown on a web page.
     The default display value for most elements is block or inline.
     display: none; is commonly used with JavaScript to hide and show elements without deleting and recreating them.  */
}

.grant-location-container.active {
    display: flex;
    flex-direction: column;
    /* yaha js se dwara humne isse visible kra diya by changing display value */
}

.grant-location-container img {
    margin-bottom: 1.5rem;
}

.grant-location-container p:first-of-type {
    font-weight: 600;
    font-size: 1.75rem;
    text-align: center;
}

.grant-location-container p:last-of-type {
    font-size: 0.75rem;
    text-align: center;
    margin-top: 0.75rem;
    margin-bottom: 1.75rem;
    font-weight: 300;
    letter-spacing: 0.75px;
}

.loading-container {
    display: none;
}

.loading-container.active {
    display: flex;
}

.loading-container p{
    text-transform: uppercase;
}    
   
.user-info-container {
    display: none;
}

.user-info-container.active {
    display: flex;
}

.name {
    display: flex;
    align-items: center;
    gap: 0 0.5rem;
    margin-bottom: 1rem;
}

.user-info-container p {
    font-size: 1.5rem;
    font-weight: 200;
}

.user-info-container img{
    width: 90px;
    height: 90px;
}

.name p{
    font-size: 2rem;

}

.name img{
    width: 30px;
    height: 30px;
}

.user-info-container p[data-temp] {
    font-size: 2.75rem;
    font-weight: 700;
}

.parameter-container {
    width: 90%;
    display: flex;
    gap: 10px 20px;
    justify-content: center;
    align-items: center;
    margin-top: 2rem;
}

.parameter {
    width: 30%;
    max-width: 200px;
    background-color: rgba(219, 226, 239, 0.5);
    border-radius: 5px;
    padding: 1rem;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
    gap: 5px 0;
}
.parameter p:first-of-type {
    font-size: 1.5rem;
    font-size: 600;
    text-transform: uppercase;
}

.parameter img {
    width: 50px;
    height: 50px;
    object-fit: cover;
}

.parameter p:last-of-type {
    font-size: 1rem;
    font-weight: 200;
}

.form-container {
    display: none;
    width: 90%;
    max-width: 550px;
    margin:0 auto;
    justify-content: center;
    align-items: center;
    gap: 0 10px;
    margin-bottom: 3rem;
}

.form-container.active {
    display: flex;
}

.form-container input {
    all: unset;
    width: calc(100% - 80px);
    height: 40px;
    padding: 0 20px;
    background-color: rgba(219, 226, 239, 0.5);
    border-radius: 10px;
}

.form-container input:focus {
    outline: 3px solid rgba(255, 255, 255, 0.7);
}
.form-container input::placeholder {
    color: rgba(255, 255, 255, 0.7);
}

.form-container .btn {
    width: 40px;
    height: 40px;
    /* display: grid;
    place-items: center; */
    display: flex;
    justify-content: center;
    align-items: center;
    padding: unset;
    border-radius: 100%;
}

.form-container .btn img {
    object-fit: contain;
}